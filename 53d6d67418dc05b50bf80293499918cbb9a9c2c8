{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ac860193_05be76db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1008040
      },
      "writtenOn": "2023-01-26T09:31:50Z",
      "side": 1,
      "message": "Nice bugfix !",
      "revId": "53d6d67418dc05b50bf80293499918cbb9a9c2c8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "134f5479_a87d6b67",
        "filename": "acceptance.sh",
        "patchSetId": 1
      },
      "lineNbr": 150,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2023-01-31T13:54:58Z",
      "side": 1,
      "message": "question: isn\u0027t it possible to retrieve the exit status in the trap, do what the trap should do, and then return the exit status ?\nlike this `trap \"rc\u003d$?; rm ...; return rc\" ?`",
      "range": {
        "startLine": 148,
        "startChar": 26,
        "endLine": 150,
        "endChar": 40
      },
      "revId": "53d6d67418dc05b50bf80293499918cbb9a9c2c8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "251c8695_190599bc",
        "filename": "acceptance.sh",
        "patchSetId": 1
      },
      "lineNbr": 150,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2023-01-31T14:03:19Z",
      "side": 1,
      "message": "The issue is that trap_add will concatenate commands one at a time. So I will build something like this:\n```\ntrap_add cmd1\ntrap_add cmd2\n\n-\u003e cmd1; cmd2\n```\n\nWhat I want to do is `rc\u003d$?; cmd1; cmd2; return $rc` which I think is what you are suggesting. But it make the code of trap_add a bit more complex. While the current approach make trap_add trivial to implement and understand at the cost of having to write `at_exit`.",
      "parentUuid": "134f5479_a87d6b67",
      "range": {
        "startLine": 148,
        "startChar": 26,
        "endLine": 150,
        "endChar": 40
      },
      "revId": "53d6d67418dc05b50bf80293499918cbb9a9c2c8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eae717dd_acd08ef6",
        "filename": "acceptance.sh",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1008040
      },
      "writtenOn": "2023-01-26T09:31:50Z",
      "side": 1,
      "message": "comment: +1 Very good comment !",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 155,
        "endChar": 18
      },
      "revId": "53d6d67418dc05b50bf80293499918cbb9a9c2c8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a7c977c_015f94bd",
        "filename": "acceptance.sh",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1008040
      },
      "writtenOn": "2023-01-26T10:00:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "eae717dd_acd08ef6",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 155,
        "endChar": 18
      },
      "revId": "53d6d67418dc05b50bf80293499918cbb9a9c2c8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d8808df_9f8555f7",
        "filename": "acceptance.sh",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1008040
      },
      "writtenOn": "2023-01-26T09:31:50Z",
      "side": 1,
      "message": "comment: why using an integer index instead of listing the content of the array ... Nevermind, your version is OK.",
      "range": {
        "startLine": 323,
        "startChar": 4,
        "endLine": 329,
        "endChar": 19
      },
      "revId": "53d6d67418dc05b50bf80293499918cbb9a9c2c8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b4d3fd0_9058f315",
        "filename": "acceptance.sh",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2023-01-26T09:38:37Z",
      "side": 1,
      "message": "The version \"for t in ${traps[@]}\" had issues with spaces. This one seems to work. Bash is intuitive. :)",
      "parentUuid": "2d8808df_9f8555f7",
      "range": {
        "startLine": 323,
        "startChar": 4,
        "endLine": 329,
        "endChar": 19
      },
      "revId": "53d6d67418dc05b50bf80293499918cbb9a9c2c8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68a00867_321a7ff0",
        "filename": "acceptance.sh",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1008040
      },
      "writtenOn": "2023-01-26T10:00:25Z",
      "side": 1,
      "message": "You can list content of the array with double quotes.\n\n$ a[0]\u003d\"toto\"\n$ a[1]\u003d\"tata tutu\"\n$ for w in ${a[@]}; do   echo $w; done\ntoto\ntata\ntutu\n$ for w in \"${a[@]}\"; do   echo $w; done\ntoto\ntata tutu\n$ for w in \"${a[*]}\"; do   echo $w; done\ntoto tata tutu\n$",
      "parentUuid": "6b4d3fd0_9058f315",
      "range": {
        "startLine": 323,
        "startChar": 4,
        "endLine": 329,
        "endChar": 19
      },
      "revId": "53d6d67418dc05b50bf80293499918cbb9a9c2c8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}