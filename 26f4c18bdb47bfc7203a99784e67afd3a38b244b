{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "94ef5990_23d904a2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2022-03-11T16:24:40Z",
      "side": 1,
      "message": "(nit) it would be fine to have an example of such user_md representation in the commit message.",
      "range": {
        "startLine": 11,
        "startChar": 11,
        "endLine": 11,
        "endChar": 68
      },
      "revId": "26f4c18bdb47bfc7203a99784e67afd3a38b244b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f14a02cc_086efb23",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2022-03-11T16:24:40Z",
      "side": 1,
      "message": "not completed the review yet.",
      "revId": "26f4c18bdb47bfc7203a99784e67afd3a38b244b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "538ba395_4e0ec0fa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2022-03-11T16:36:43Z",
      "side": 1,
      "message": "review complete",
      "revId": "26f4c18bdb47bfc7203a99784e67afd3a38b244b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b312b7ce_1d14020b",
        "filename": "acceptance.sh",
        "patchSetId": 2
      },
      "lineNbr": 472,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-03-10T12:46:06Z",
      "side": 1,
      "message": "minor: this should have been removed",
      "range": {
        "startLine": 471,
        "startChar": 0,
        "endLine": 472,
        "endChar": 28
      },
      "revId": "26f4c18bdb47bfc7203a99784e67afd3a38b244b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efac4fc8_ba998e86",
        "filename": "lhsmtool_phobos.c",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2022-03-11T16:24:40Z",
      "side": 1,
      "message": "Q: why did you remove the \"static\" statement?",
      "range": {
        "startLine": 130,
        "startChar": 0,
        "endLine": 130,
        "endChar": 24
      },
      "revId": "26f4c18bdb47bfc7203a99784e67afd3a38b244b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "049f3af6_7d3aa537",
        "filename": "lhsmtool_phobos.c",
        "patchSetId": 2
      },
      "lineNbr": 670,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2022-03-11T16:24:40Z",
      "side": 1,
      "message": "(-1) llapi_layout* calls do not return -errno, but follow the lib C convention: return -1 and sets errno.\n\nSo here, it should be:\n\n return -errno;\n \nI did not check and comment other llapi_layout calls in this patch. Please check them.",
      "range": {
        "startLine": 669,
        "startChar": 0,
        "endLine": 670,
        "endChar": 18
      },
      "revId": "26f4c18bdb47bfc7203a99784e67afd3a38b244b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdf1d243_1e997fcf",
        "filename": "src/layout.c",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2022-03-11T16:24:40Z",
      "side": 1,
      "message": "missing licence header",
      "revId": "26f4c18bdb47bfc7203a99784e67afd3a38b244b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "675ba6c4_0c2f172f",
        "filename": "src/layout.c",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2022-03-11T16:24:40Z",
      "side": 1,
      "message": "default for lfs set_stripe size argument is 0. Are you sure it is -1 here?",
      "range": {
        "startLine": 82,
        "startChar": 31,
        "endLine": 82,
        "endChar": 41
      },
      "revId": "26f4c18bdb47bfc7203a99784e67afd3a38b244b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6526e8b_a1f61448",
        "filename": "src/layout.c",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2022-03-11T16:36:43Z",
      "side": 1,
      "message": "return -errno;\n\nsame for next calls",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 127,
        "endChar": 18
      },
      "revId": "26f4c18bdb47bfc7203a99784e67afd3a38b244b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "608f25a5_893c615b",
        "filename": "src/layout.c",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2022-03-11T16:36:43Z",
      "side": 1,
      "message": "why not using getsubopt() ?",
      "range": {
        "startLine": 158,
        "startChar": 0,
        "endLine": 159,
        "endChar": 1
      },
      "revId": "26f4c18bdb47bfc7203a99784e67afd3a38b244b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9312152_130ef03b",
        "filename": "src/layout.c",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2022-03-11T16:36:43Z",
      "side": 1,
      "message": "Here you use an error code convention which is different from other calls.\nAt least explicit it in a doxygen header of the function :-)",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 168,
        "endChar": 5
      },
      "revId": "26f4c18bdb47bfc7203a99784e67afd3a38b244b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9afbb0e9_79721cad",
        "filename": "src/layout.c",
        "patchSetId": 2
      },
      "lineNbr": 301,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2022-03-11T16:36:43Z",
      "side": 1,
      "message": "(defect, leak) here you don\u0027t free the string allocated by strdup, but the last value returned by csv_next_value, which is likely... NULL.",
      "range": {
        "startLine": 301,
        "startChar": 4,
        "endLine": 301,
        "endChar": 19
      },
      "revId": "26f4c18bdb47bfc7203a99784e67afd3a38b244b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9b4bcbf_aa126b32",
        "filename": "src/layout.c",
        "patchSetId": 2
      },
      "lineNbr": 310,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2022-03-11T16:36:43Z",
      "side": 1,
      "message": "(defect) asprintf returns the number of bytes printed\n\nshould be:\n\nif (rc \u003d\u003d -1)",
      "range": {
        "startLine": 310,
        "startChar": 4,
        "endLine": 310,
        "endChar": 11
      },
      "revId": "26f4c18bdb47bfc7203a99784e67afd3a38b244b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "faadfe6f_c76ebbce",
        "filename": "src/layout.c",
        "patchSetId": 2
      },
      "lineNbr": 367,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2022-03-11T16:24:40Z",
      "side": 1,
      "message": "add vim indentation directives",
      "revId": "26f4c18bdb47bfc7203a99784e67afd3a38b244b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9d043d3_55d967c1",
        "filename": "src/layout.h",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2022-03-11T16:24:40Z",
      "side": 1,
      "message": "At least include a SPDX license header, e.g.:\n\n/*\n * Copyright (C) 2022 Commissariat a l\u0027energie atomique et aux energies\n *                    alternatives\n *\n * SPDX-License-Identifer: GPL-2.0-only\n */",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 16
      },
      "revId": "26f4c18bdb47bfc7203a99784e67afd3a38b244b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1b07669_f8ddfce0",
        "filename": "src/layout.h",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2022-03-11T16:24:40Z",
      "side": 1,
      "message": "Missing vim statement to help other devs use the same indentation convention.\n\n/* vim:expandtab:shiftwidth\u003d4:tabstop\u003d4: */",
      "revId": "26f4c18bdb47bfc7203a99784e67afd3a38b244b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}